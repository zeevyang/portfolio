

var ArticleInsuranceController = function(element){



	var scene1;
	var trigger;
	var snowCover;



	var init = function(){

		if (Modernizr.eventlistener){
			setup();
			initAnimation();
			initScrollMagic();
		}

	}


	var setup = function(){

		trigger = document.getElementById("article-insurance-trigger");
		snowCover = document.getElementById("article-insurance-snow-cover");

	}

	var initScrollMagic = function(){

		scene1 = new ScrollMagic.Scene({triggerElement:trigger, duration:element.outerHeight() + windowHeight })
        .on("enter", startAnimation)        	
        .on("leave", stopAnimation)  
        .addTo(scrollController); 
		
	}

	var initAnimation = function(){

		timeline = new TimelineMax({});
		timeline.insert(TweenMax.to( snowCover, 10, { css:{backgroundPosition:"0 257px"}, ease:Linear.easeNone, repeat:-1 }));

	}

	var startAnimation = function(){

		timeline.play();

	}

	var stopAnimation = function(){

		timeline.pause();

	}


	var resize = function(){

		if (Modernizr.eventlistener){
			scene1.duration( element.outerHeight() + windowHeight );
		}

	}    

	init();

	this.resize = resize;


}



var ArticleIntroIceSkaterController = function(element){



	var imgGirl;
	var canvasGirl;
	var stage;

	var playing = false;





	var init = function(){

		setupItems();
		if (_html.hasClass("canvas")){ //Modernizr.canvas doesn't work for some reason
			//initAnimation();
			fallback();
		} else {
			fallback();
		}

	}

	var setupItems = function(){

		imgGirl = $("#article-intro-skater-girl-img");
		canvasGirl = $("#article-intro-skater-girl-canvas");

	}

	var initAnimation = function(){

		canvasGirl.addClass("active");

		var exportRoot = new lib.moppie();

		stage = new createjs.Stage(canvasGirl[0]);
		stage.addChild(exportRoot);
		stage.update();

		createjs.Ticker.setFPS(30);
		play();

	}

	var fallback = function(){

		imgGirl.addClass("active");

	}


	var pause = function(){

		createjs.Ticker.removeEventListener("tick", stage);

	}

	var play = function(){

		createjs.Ticker.addEventListener("tick", stage);

	}



	this.pause = pause;
	this.play = play;




	init();



}


var ArticleIntroController = function(element){


	var scene1;
	var scene2;
	var timeline;
	var timeline_snowcovertop;

	var trigger;
	var triggerSnowCoverTop;
	var button1;
	var button2;
	var button3;
	var snowCoverTop;
	var snowCoverBottom;
	var articleIntroTop;
	var articleIntroBottom;
	var flakes;



	var init = function(){

		setup();
		setupEventListeners();

		if (Modernizr.eventlistener){		
			initAnimation();
			initScrollMagic();
		}

		
		initIceSkater();
		
	}


	var setup = function(){

		trigger = document.getElementById("trigger-article-insurance");
		triggerSnowCoverTop = document.getElementById("trigger-snow-cover-top");
		button1 = $("#article-intro-button-step1");
		button2 = $("#article-intro-button-step2");
		button3 = $("#article-intro-button-step3");
		snowCoverTop = $("#article-intro-snow-cover-top");
		snowCoverBottom = $("#article-intro-snow-cover-bottom");
		articleIntroTop = $("#article-intro-container-top");
		articleIntroBottom = $("#article-intro-container-bottom");
		flakes = $(".sprite-snow-flake", element);

	}

	var setupEventListeners = function(){

		button1.click( function(){
			onButtonClick($("#article-step1"));
		});

		button2.click( function(){
			onButtonClick($("#article-step2"));
		});

		button3.click( function(){
			onButtonClick($("#article-step3"));
		});

	}

	var onButtonClick = function(article){

		var topbarHeight = 75;
		if (smallMode){
			topbarHeight = 0;
		}

		TweenMax.to( _window[0], 0.66, { scrollTo:{y:article.offset().top - topbarHeight}, ease:Quart.easeOut } );

	}

	var initAnimation = function(){

		timeline = new TimelineMax({paused:true});
		timeline_snowcovertop = new TimelineMax({paused:true});

		initSnowFlakeAnimation();

		timeline.gotoAndStop(1000);

	}

	var initSnowFlakeAnimation = function(){
		
		var articleHeight = element.outerHeight();
		var timeline_snowflakes = new TimelineMax();

		timeline_snowcovertop.insert(TweenMax.to(snowCoverTop, 10, { css:{backgroundPosition:"0 257px"}, ease:Linear.easeNone, repeat:-1 }));

		var time = 6;
		if (smallMode){ time = 10 }
		timeline.insert(TweenMax.to(snowCoverBottom, time, { css:{backgroundPosition:"0 257px"}, ease:Linear.easeNone, repeat:-1 }));

		for (var i = 0; i < flakes.length; i++) {
			var flake = $(flakes[i]);
			flake.css("top", 0);
			var duration = 12 + (Math.random() * 8);
			if (smallMode){ duration = 24 + (Math.random() * 12) }
			var swingDuration = 2 + (Math.random() * 2);
			var swingX = 20 + (Math.random() * 40);
			var rotation = -700 + (Math.random() * 1400);
			timeline_snowflakes.insert(TweenMax.to( flake, duration, { y:articleHeight, rotation:rotation, ease:Linear.easeNone, repeat:-1 } ));
			timeline_snowflakes.insert(TweenMax.to( flake, swingDuration, { x:swingX, ease:Quad.easeInOut, yoyo:true, repeat:-1 } ));
		};

		timeline.insert(timeline_snowflakes);

	}

	var initIceSkater = function(){

		var iceskater = new ArticleIntroIceSkaterController( element );

	}

	var initScrollMagic = function(){

		scene1 = new ScrollMagic.Scene({triggerElement:trigger, duration:element.outerHeight() })
        .on("enter", function(){ timeline.play() })        	
        .on("leave", function(){ timeline.stop() })     
        .addTo(scrollController);

		scene2 = new ScrollMagic.Scene({triggerElement:trigger, duration:snowCoverTop.outerHeight() })
        .on("enter", function(){ timeline_snowcovertop.play() })        	
        .on("leave", function(){ timeline_snowcovertop.stop() })     
        .addTo(scrollController);


	}

	var reset = function(){

		scene1.duration( element.outerHeight() );
		scene2.duration( snowCoverTop.outerHeight() );

		timeline.kill();
		timeline_snowcovertop.kill();
		var items = [flakes,snowCoverTop,snowCoverBottom];
		for (var i = 0; i < items.length; i++) {
			TweenMax.killTweensOf( items[i] );
			TweenMax.set( items[i], {clearProps:"all"} );
		};
		


	}




	var resize = function(){

		if (Modernizr.eventlistener){	
			
			scene1.duration(element.outerHeight());
			scene2.duration(windowHeight);			

			reset();
			initAnimation();

			if(scene1.state() == "DURING"){
				timeline.play();
			}

			if(scene2.state() == "DURING"){
				timeline_snowcovertop.play();
			}


		}
		

	}    

	init();

	this.resize = resize;


}


var ArticleJoinController = function(element){


	var scene1;
	var trigger;

	var init = function(){

		setup();
		initScrollMagic();


	}


	var setup = function(){

		trigger = document.getElementById("trigger-article-join")

	}

	var initScrollMagic = function(){

		/*scene1 = new ScrollMagic.Scene({triggerElement:trigger, offset:-TOP_BAR_HEIGHT, duration:(windowHeight * 1.5)  + TOP_BAR_HEIGHT })
        .on("enter", startAnimation)        	
        .on("leave", stopAnimation)  
        .addTo(scrollController); */

	}


	var resize = function(){



	}    

	init();

	this.resize = resize;


}


var ArticleTermsController = function(element){



	var scene1;
	var timeline;
	var trigger;
	var flakes;



	var init = function(){

		if (Modernizr.eventlistener){
			setup();
			if (!smallMode){
				initAnimation();
			}
			initScrollMagic();
		}

	}


	var setup = function(){

		trigger = document.getElementById("article-terms-trigger");
		flakes = $(".sprite-snow-flake", element);

	}

	var initScrollMagic = function(){

		scene1 = new ScrollMagic.Scene({triggerElement:trigger, duration:element.outerHeight() + 1 })
        .on("enter", startAnimation)   
        .on("leave", stopAnimation)  
        .addTo(scrollController); 
		
	}

	var initAnimation = function(){

		timeline = new TimelineMax({});
		var articleHeight = element.outerHeight();
		var timeline_snowflakes = new TimelineMax();
		var time = 6;
		if (smallMode){ time = 10 }

		for (var i = 0; i < flakes.length; i++) {
			var flake = $(flakes[i]);
			flake.css("top", -50);
			var duration = 12 + (Math.random() * 8);
			if (smallMode){ duration = 24 + (Math.random() * 12) }
			var swingDuration = 2 + (Math.random() * 2);
			var swingX = 20 + (Math.random() * 40);
			var rotation = -700 + (Math.random() * 1400);
			timeline_snowflakes.insert(TweenMax.to( flake, duration, { y:articleHeight + 60, rotation:rotation, ease:Linear.easeNone, repeat:-1 } ));
			timeline_snowflakes.insert(TweenMax.to( flake, swingDuration, { x:swingX, ease:Quad.easeInOut, yoyo:true, repeat:-1 } ));
		};

		timeline.insert(timeline_snowflakes);
		timeline.gotoAndStop(1000);

		
	}

	var startAnimation = function(){

		if ((timeline) && (!smallMode)){
			timeline.play();
		}

	}

	var stopAnimation = function(){

		if (timeline){
			timeline.pause();
		}

	}


	var resize = function(){

		if (Modernizr.eventlistener){	

			scene1.duration( element.outerHeight() + 1 );

			if (timeline){
				timeline.kill();
			}

			var items = [flakes];
			for (var i = 0; i < items.length; i++) {
				TweenMax.killTweensOf( items[i] );
				TweenMax.set( items[i], {clearProps:"all"} );
			};

			if (!smallMode){
				initAnimation();
				if(scene1.state() == "DURING"){
					timeline.play();
				}
			}

		} 

	}    

	init();

	this.resize = resize;


}
window.checkMobileTablet = function() {
  var check = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);
  return check;
}



var EnquireController = function(){




	var initialized = false;

		


	var init = function(){

		if (!Modernizr.eventlistener){			
			setup(false);	
		} else {
			initEnquire();
		}

	}

	var initEnquire = function(){

		enquire.register("screen and (max-width: " + BREAK_SMALL + "px)", {
			deferSetup : true,
			setup : function() {
				if (!initialized){
					setup(true)
				}
			},
		    match : function() {
		        smallMode = true;
		    }		    
		});

		enquire.register("screen and (min-width: " + BREAK_SMALL + "px)", {
			deferSetup : true,	
			setup : function() {
				if (!initialized){
					setup(false)
				}
			},		
		    match : function() {
		        smallMode = false;
		    }		       
		});

	}


	var setup = function( trueFalse ){

		initialized = true;
		smallMode = trueFalse;
		initMain();

	}


	var initMain = function(){

		mainController = new Main();

	}












	$( document ).ready(function() {
	    init();
	});	

} 

var mainController;
var enquireController = new EnquireController();
this.ImgLoader = function( ){

	var prefix = "";
	var triggerLoadAll;

	var images;
	var scene1;




	var init = function(){

		setupItems();
		if (typeof ScrollMagic !== 'undefined') {
			initScrollMagic();
			loadIntro();
		} else {
			loadAll();
		}
		
		
	}


	var setupItems = function(){

		if (Modernizr.highresdisplay) { prefix = "-2x" };   
		triggerLoadAll = document.getElementById("trigger-load-all-images");

	}

	var initScrollMagic = function(){

		scene1 = new ScrollMagic.Scene({triggerElement:triggerLoadAll, offset:10 })
        .on("enter", loadAll)
        .addTo(scrollController);

	}
	

	var loadIntro = function(){

		if (smallMode){
	    	setImgs( $("article.intro img.mobile") );
	    } else {
	    	setImgs( $("article.intro img.desktop") );
	    }

	}
	
	

	var loadAll = function(){

	    if (smallMode){
	    	setImgs( $("img.mobile") );
	    } else {
	    	setImgs( $("img.desktop") );
	    }

	}


	var setImgs = function(imgs){

	    for (var i = 0; i < imgs.length; i++) {
	      var img = $(imgs[i]);
	      var src =  img.attr("data-src") + prefix + "." + img.attr("data-type");
	      img.attr("src", src);
	    };

	}

	init();

	this.resize = loadAll;
	
}


var LotteryHitTester = function(){

	var element;

	var hitTests1;
	var hitTests2;
	var hitTests3;

	var piece1;
	var piece2;
	var piece3;

	var activated = false;


	var init = function(){

		setup();
		setupEventListener();

	}

	var setup = function(){

		element = $("#container-cake-hit-test");

		hitTests1 = $("#lottery-hit-test1 .rectangle");
		hitTests2 = $("#lottery-hit-test2 .rectangle");
		hitTests3 = $("#lottery-hit-test3 .rectangle");

		piece1 = $("#lotter-cake-piece1");
		piece2 = $("#lotter-cake-piece2");
		piece3 = $("#lotter-cake-piece3");

	}

	var setupEventListener = function(){

		var array = [hitTests1, hitTests2, hitTests3];
		for (var i = 0; i < array.length; i++) {
			array[i].mouseover(function(e){
				var target = $(e.target).parent().attr("target");
				addClass(target, "hover");
			});
			array[i].mouseout(function(e){
				var target = $(e.target).parent().attr("target");
				removeClass(target, "hover");
			});
			array[i].on("click tap", function(e){
				var target = $(e.target).parent().attr("target");
				activate(target);
			})
		};

	}

	var addClass = function(target, string){

		if (!activated){

			if (target == "lotter-cake-piece1"){
				piece1.addClass(string);
			} else if (target == "lotter-cake-piece2"){
				piece2.addClass(string);
			} else if (target == "lotter-cake-piece3"){
				piece3.addClass(string);
			}

		}

	}

	var removeClass = function(target, string){

		if (!activated){

			if (target == "lotter-cake-piece1"){
				piece1.removeClass(string);
			} else if (target == "lotter-cake-piece2"){
				piece2.removeClass(string);
			} else if (target == "lotter-cake-piece3"){
				piece3.removeClass(string);
			}

		}

	}

	var activate = function(target){

		if (!activated){

			activated = true;

			if (target == "lotter-cake-piece1"){
				$("#lotter-cake-piece1-button").trigger("click");
			} else if (target == "lotter-cake-piece2"){
				$("#lotter-cake-piece2-button").trigger("click");
			} else if (target == "lotter-cake-piece3"){
				$("#lotter-cake-piece3-button").trigger("click");
			}

			deactivate();

		}
		

	}

	var deactivate = function(){

		element.css("display", "none");

		var array = [piece1, piece2, piece3];
		for (var i = 0; i < array.length; i++) {
			array[i].addClass("deactivated");
		};

	}


	init();



}



var BREAK_SMALL = 767;
var MAX_WIDTH = 1760;

var _document = $(document);
var _window = $(window);
var _html = $("html");
var _body = $("body");
var _main;

var mobileMode = false;
var mobileTablet;
var firefox;
var ie;

var scrollController;

var windowHeight;
var windowWidth;
var previousWidth;

var topbarController;
var imgLoader;


function iOS() {

  var iDevices = [
    'iPad Simulator',
    'iPhone Simulator',
    'iPod Simulator',
    'iPad',
    'iPhone',
    'iPod'
  ];

  if (!!navigator.platform) {
    while (iDevices.length) {
      if (navigator.platform === iDevices.pop()){ return true; }
    }
  }

  return false;
}


var Main = function(){		

	var articleController;

	var articleIntro;
	var articleJoin;
	var articleInsurance;


	var init = function(){

		checkBrowser();		
		setupItems();
		getDimensions();
		previousWidth = windowWidth;
		
		if (Modernizr.eventlistener){			
			initScrollMagic();				
		} else {
			fallback();
		}

		topbarController = new TopBarController();
		imgLoader = new ImgLoader();
		initArticles();	
		setupEventListeners();		


		if (iOS()) {
			$('html').addClass('ios-device');
		}

		FastClick.attach(document.body);

	}

	var checkBrowser = function(){
		
		if(typeof InstallTrigger !== 'undefined'){
			firefox = true;
		}

		//ie = detectIE();

		mobileTablet = window.checkMobileTablet();

	}

	var setupItems = function(){

			

	}	

	var setupEventListeners = function(){		
		
		_window.on( "orientationchange resize", function() {	

			if ( (mobileTablet) && (previousWidth == _window.width()) ) {

			} else {
				TweenMax.killDelayedCallsTo(resize);
				TweenMax.delayedCall(0.1, resize);		
			}			
		});		

		var lotteryHitTester = new LotteryHitTester();		

	}

	

	var getDimensions = function(){

		previousWidth = windowWidth;
		windowWidth = _window.width();
		windowHeight = _window.height();

	}

	var resize = function(){

		getDimensions();
		topbarController.resize();	
		articleIntro.resize();
		articleInsurance.resize();
		articleTerms.resize();

	}
	
	var initScrollMagic = function(){

		scrollController = new ScrollMagic.Controller({
			container:_body[0],
			globalSceneOptions:{
				triggerHook:1
			}
		});		

	}


	var initArticles = function(){

		articleIntro = new ArticleIntroController( $("#article-intro") );		
		articleInsurance = new ArticleInsuranceController( $("#article-step3") );
		articleTerms = new ArticleTermsController( $("#article-terms") );

	}

	

	var fallback = function(){



	}
	

	
    init(); 

};








/*! modernizr 3.3.1 (Custom Build) | MIT *
 * https://modernizr.com/download/?-backgroundsize-bgsizecover-borderradius-cssvhunit-eventlistener-flexbox-addtest-setclasses !*/
!function(e,n,t){function r(e,n){return typeof e===n}function o(){var e,n,t,o,i,s,a;for(var l in C)if(C.hasOwnProperty(l)){if(e=[],n=C[l],n.name&&(e.push(n.name.toLowerCase()),n.options&&n.options.aliases&&n.options.aliases.length))for(t=0;t<n.options.aliases.length;t++)e.push(n.options.aliases[t].toLowerCase());for(o=r(n.fn,"function")?n.fn():n.fn,i=0;i<e.length;i++)s=e[i],a=s.split("."),1===a.length?Modernizr[a[0]]=o:(!Modernizr[a[0]]||Modernizr[a[0]]instanceof Boolean||(Modernizr[a[0]]=new Boolean(Modernizr[a[0]])),Modernizr[a[0]][a[1]]=o),_.push((o?"":"no-")+a.join("-"))}}function i(e){var n=b.className,t=Modernizr._config.classPrefix||"";if(x&&(n=n.baseVal),Modernizr._config.enableJSClass){var r=new RegExp("(^|\\s)"+t+"no-js(\\s|$)");n=n.replace(r,"$1"+t+"js$2")}Modernizr._config.enableClasses&&(n+=" "+t+e.join(" "+t),x?b.className.baseVal=n:b.className=n)}function s(e,n){if("object"==typeof e)for(var t in e)S(e,t)&&s(t,e[t]);else{e=e.toLowerCase();var r=e.split("."),o=Modernizr[r[0]];if(2==r.length&&(o=o[r[1]]),"undefined"!=typeof o)return Modernizr;n="function"==typeof n?n():n,1==r.length?Modernizr[r[0]]=n:(!Modernizr[r[0]]||Modernizr[r[0]]instanceof Boolean||(Modernizr[r[0]]=new Boolean(Modernizr[r[0]])),Modernizr[r[0]][r[1]]=n),i([(n&&0!=n?"":"no-")+r.join("-")]),Modernizr._trigger(e,n)}return Modernizr}function a(){return"function"!=typeof n.createElement?n.createElement(arguments[0]):x?n.createElementNS.call(n,"http://www.w3.org/2000/svg",arguments[0]):n.createElement.apply(n,arguments)}function l(){var e=n.body;return e||(e=a(x?"svg":"body"),e.fake=!0),e}function u(e,t,r,o){var i,s,u,f,d="modernizr",c=a("div"),p=l();if(parseInt(r,10))for(;r--;)u=a("div"),u.id=o?o[r]:d+(r+1),c.appendChild(u);return i=a("style"),i.type="text/css",i.id="s"+d,(p.fake?p:c).appendChild(i),p.appendChild(c),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(n.createTextNode(e)),c.id=d,p.fake&&(p.style.background="",p.style.overflow="hidden",f=b.style.overflow,b.style.overflow="hidden",b.appendChild(p)),s=t(c,e),p.fake?(p.parentNode.removeChild(p),b.style.overflow=f,b.offsetHeight):c.parentNode.removeChild(c),!!s}function f(e,n){return!!~(""+e).indexOf(n)}function d(e){return e.replace(/([a-z])-([a-z])/g,function(e,n,t){return n+t.toUpperCase()}).replace(/^-/,"")}function c(e,n){return function(){return e.apply(n,arguments)}}function p(e,n,t){var o;for(var i in e)if(e[i]in n)return t===!1?e[i]:(o=n[e[i]],r(o,"function")?c(o,t||n):o);return!1}function h(e){return e.replace(/([A-Z])/g,function(e,n){return"-"+n.toLowerCase()}).replace(/^ms-/,"-ms-")}function m(n,r){var o=n.length;if("CSS"in e&&"supports"in e.CSS){for(;o--;)if(e.CSS.supports(h(n[o]),r))return!0;return!1}if("CSSSupportsRule"in e){for(var i=[];o--;)i.push("("+h(n[o])+":"+r+")");return i=i.join(" or "),u("@supports ("+i+") { #modernizr { position: absolute; } }",function(e){return"absolute"==getComputedStyle(e,null).position})}return t}function g(e,n,o,i){function s(){u&&(delete k.style,delete k.modElem)}if(i=r(i,"undefined")?!1:i,!r(o,"undefined")){var l=m(e,o);if(!r(l,"undefined"))return l}for(var u,c,p,h,g,v=["modernizr","tspan","samp"];!k.style&&v.length;)u=!0,k.modElem=a(v.shift()),k.style=k.modElem.style;for(p=e.length,c=0;p>c;c++)if(h=e[c],g=k.style[h],f(h,"-")&&(h=d(h)),k.style[h]!==t){if(i||r(o,"undefined"))return s(),"pfx"==n?h:!0;try{k.style[h]=o}catch(y){}if(k.style[h]!=g)return s(),"pfx"==n?h:!0}return s(),!1}function v(e,n,t,o,i){var s=e.charAt(0).toUpperCase()+e.slice(1),a=(e+" "+P.join(s+" ")+s).split(" ");return r(n,"string")||r(n,"undefined")?g(a,n,o,i):(a=(e+" "+E.join(s+" ")+s).split(" "),p(a,n,t))}function y(e,n,r){return v(e,t,t,n,r)}var _=[],C=[],w={_version:"3.3.1",_config:{classPrefix:"",enableClasses:!0,enableJSClass:!0,usePrefixes:!0},_q:[],on:function(e,n){var t=this;setTimeout(function(){n(t[e])},0)},addTest:function(e,n,t){C.push({name:e,fn:n,options:t})},addAsyncTest:function(e){C.push({name:null,fn:e})}},Modernizr=function(){};Modernizr.prototype=w,Modernizr=new Modernizr,Modernizr.addTest("eventlistener","addEventListener"in e);var S,b=n.documentElement,x="svg"===b.nodeName.toLowerCase();!function(){var e={}.hasOwnProperty;S=r(e,"undefined")||r(e.call,"undefined")?function(e,n){return n in e&&r(e.constructor.prototype[n],"undefined")}:function(n,t){return e.call(n,t)}}(),w._l={},w.on=function(e,n){this._l[e]||(this._l[e]=[]),this._l[e].push(n),Modernizr.hasOwnProperty(e)&&setTimeout(function(){Modernizr._trigger(e,Modernizr[e])},0)},w._trigger=function(e,n){if(this._l[e]){var t=this._l[e];setTimeout(function(){var e,r;for(e=0;e<t.length;e++)(r=t[e])(n)},0),delete this._l[e]}},Modernizr._q.push(function(){w.addTest=s});var T=w.testStyles=u;T("#modernizr { height: 50vh; }",function(n){var t=parseInt(e.innerHeight/2,10),r=parseInt((e.getComputedStyle?getComputedStyle(n,null):n.currentStyle).height,10);Modernizr.addTest("cssvhunit",r==t)});var z="Moz O ms Webkit",P=w._config.usePrefixes?z.split(" "):[];w._cssomPrefixes=P;var E=w._config.usePrefixes?z.toLowerCase().split(" "):[];w._domPrefixes=E;var j={elem:a("modernizr")};Modernizr._q.push(function(){delete j.elem});var k={style:j.elem.style};Modernizr._q.unshift(function(){delete k.style}),w.testAllProps=v,w.testAllProps=y,Modernizr.addTest("bgsizecover",y("backgroundSize","cover")),Modernizr.addTest("borderradius",y("borderRadius","0px",!0)),Modernizr.addTest("flexbox",y("flexBasis","1px",!0)),Modernizr.addTest("backgroundsize",y("backgroundSize","100%",!0)),o(),i(_),delete w.addTest,delete w.addAsyncTest;for(var N=0;N<Modernizr._q.length;N++)Modernizr._q[N]();e.Modernizr=Modernizr}(window,document);



Modernizr.addTest('highresdisplay', function(){ 
    if (window.matchMedia) { 
        var mq = window.matchMedia("only screen and (-moz-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)");
        if(mq && mq.matches) {
            return true;
        } 
   }
});


this.SpriteLoader = function(  ){

  var hires;
  var prefix = "";

  var init = function(){

    if (Modernizr.highresdisplay) { prefix = "-x2" };      

    loadCss("index");   

  }

  var loadCss = function( id ){

    var slashIndex = window.location.href.lastIndexOf("/");
    var _prefix = prefix;
    var href = 'css/sprites/' + id + '-sprites' + _prefix + '.css';    
    var head  = document.getElementsByTagName('head')[0];
    var link  = document.createElement('link');    
    link.rel  = 'stylesheet';
    link.type = 'text/css';
    link.href = href;
    link.media = 'all';
    head.appendChild(link);
     

  }

 

  $(document).ready(function() {
      init();        
  }); 

}





var spriteLoader = new SpriteLoader();

var TopBarController = function( ){		

	var element;
	var buttonOpen;
	var buttonClose;
	var buttons;
	var container;
	var container2;
	var darken;
	var buttonScrollTop;

	var initialized = false;
	var opened = false;
	var hidden = false;

	var scrollTop = 0;

	

	var init = function(){


		setup();
		setupEventListeners();
		if (smallMode){
			initialized = true;			
			setupMobileEventListener();
		}

	}

	var setup = function(){

		element = $("#nav-top")
		buttonOpen = $("#button-topbar-open");
		buttonClose = $("#button-topbar-close");
		buttons = $(".button-nav-top", element);
		container = $("#button-topbar-buttons-container");
		container2 = $("#button-topbar-buttons-container2");
		buttonScrollTop = $("#button-scroll-top");
		darken = document.getElementById("topbar-darken");

	}

	var setupEventListeners = function(){

		buttons.click( onButtonClick );
		buttonScrollTop.click( scrollTop );

	}


	var setupMobileEventListener = function(){

		buttonOpen.click( onButtonTogglelick );
		buttonClose.click( onButtonTogglelick );		
		_window.scroll( onWindowScroll );

	}



	var onWindowScroll = function(){

		var st = _window.scrollTop();
		var direction = 1;
		if ( st < scrollTop ){
			direction = -1;
		}
		scrollTop = st;


		if (smallMode){
			
			if (_window.scrollTop() > 50){
				if (direction === 1){
					hide();
				} else {
					unhide();
				}
			} else if (hidden) {
				unhide();
			}
			
		}

	}

	var hide = function(){

		if (!hidden){
			hidden = true;
			TweenMax.to( element, 0.5, { y:-51, ease:Quart.easeIn } );
			if (opened){
				close();
			}
		}

	}

	var unhide = function(){

		if (hidden){
			hidden = false;
			TweenMax.to( element, 0.5, { y:0, ease:Quart.easeOut } );
		}

	}

	var onButtonTogglelick = function(){

		if (opened){
			close();
		} else {
			open();
		}

	}

	var onButtonClick = function(e){		

		var target = $(e.target);
		var article;
		var topbarHeight = 75;
		var easing = Quart.easeOut;

		if (smallMode){
			close();
			topbarHeight = 0;
			easing = Quart.easeInOut;
		}

		if (!_html.hasClass("csspointerevents")){ //Modernizr.csspointerevents somehow doesnt work
			target = getTargetFallback(target);
		}
		
		if (target.is("#button-step1")){
			article = $("#article-step1");
		} else if (target.is("#button-step2")){
			article = $("#article-step2");
		} else if (target.is("#button-step3")){
			article = $("#article-step3");
		}			

		if (article){
			TweenMax.to( _window[0], 0.66, { scrollTo:{y:article.offset().top - topbarHeight}, ease:easing } );
		}

	}


	var getTargetFallback = function( target ){

		if (target.hasClass("text")){
			target = target.parent().parent();
		} else if (target.hasClass("container-text")){
			target = target.parent();
		}

		return target;

	}

	var scrollTop = function(){

		TweenMax.to( _window[0], 1.25, { scrollTo:{y:0}, ease:Quart.easeOut } );

	}

	var open = function(){

		opened = true;
		container2.css("pointer-events", "visible");
		TweenMax.to(container, 0.5, {y:"100%", ease:Quart.easeOut});		
		TweenMax.set(buttonClose, {y:50, scaleX:1});
		TweenMax.to(buttonClose, 0.5, {y:0, ease:Quart.easeOut});
		TweenMax.to(buttonOpen, 0.5, {y:-51, ease:Quart.easeOut});
		TweenMax.to(darken, 0.5, {alpha:1, ease:Quad.easeOut});

	}

	var close = function(){

		opened = false;
		container2.css("pointer-events", "none");
		TweenMax.to(container, 0.5, {y:"0%", ease:Quart.easeOut});
		TweenMax.set(buttonOpen, {y:-51});
		TweenMax.to(buttonClose, 0.5, {y:-51, ease:Quart.easeOut});
		TweenMax.to(buttonOpen, 0.5, {y:0, ease:Quart.easeOut});
		TweenMax.to(darken, 0.2, {alpha:0, ease:Quad.easeOut});

	}

	


	var reset = function(){

		opened = false;
		TweenMax.set( [element, container, container2, buttonOpen, buttonClose, darken], { clearProps:"all" } );

	}


	
	var resize = function(){

		if (!smallMode){
			reset();
		} else if ((smallMode) && (!initialized)){
			init();
		}

	}






	init();



	this.resize = resize
	


}